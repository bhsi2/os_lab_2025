Задание 1


Скомпилировал программу с помощью: gcc -pthread -o mutex mutex.c
И запустил: ./mutex

Из-за того что несколько потоков одновременно пытаются получить доступ к общим данным результат становится непредсказуем и возможны различные результаты.
А с использованием мьютексов можно заблокировать общие данные для одного потока и результат становится уже предсказуемым.


Задание 2


Написал небольшую программу в которой разделяю на потоки вычисление факториала посредством передавая каждому потоку свой диапазон  вычисления факториала.
А после умножая каждый частичный результат на значение глобальной переменной тем самым и вычисляя значение факториала.

Скомпилировал программу с помощью: gcc -pthread -o parallel_factorial parallel_factorial.c
И запустил: ./parallel_factorial


Задание 3


Написал небольшую программу в которой создается два потока для создания deadlock`а и третий поток отслеживает когда эти два потока создадут deadlock и сообщает об этом.
Создал deadlock путем тем что сначала оба потока лочат свой мьютекс а после пытаются залочить уже другой мьютекс что никогда не произойдет.

компиляция: gcc -pthread -o deadlock_demo deadlock_demo.c
запуск: ./deadlock_demo